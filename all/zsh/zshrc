# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="mytheme"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder


export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$PROJECTS

PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin"
PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
PATH="$HOME/.local/usr/bin:$HOME/.local/bin:/usr/texbin:$PATH"
export PATH

export CPATH="$HOME/.local/usr/include:$HOME/.local/include:${CPATH}"
export LIBRARY_PATH="$HOME/.local/usr/lib:$HOME/.local/lib:${LIBRARY_PATH}"
export LD_LIBRARY_PATH="$HOME/.local/usr/lib:$HOME/.local/lib:${LD_LIBRARY_PATH}"

# You may need to manually set your language environment
export LC=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export EDITOR='vim'

plugins=(git python osx brew history-substring-search virtualenvwrapper vi-mode)

# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

alias zshconfig="vim ~/.zshrc"
alias editor="vim"
alias vimconfig="vim ~/.vimrc"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias vsp="vsplit_tab"
alias cx="chmod +x "

bindkey '^R' history-incremental-search-backward

if [ `uname` = "Darwin" ]; then
    nbtunnel () {
        ssh -q -N -f -L localhost:6500:localhost:7000 $1 \
            && open -a safari https://localhost:6500
    }
    nbstart () {
        if [[ $# == 1 ]]; then
            workon $1 && ipython notebook
        elif [[ $# == 0 ]]; then
            ipython notebook
        else;
            echo "Usage: $0 [venv]"
        fi
    }
elif [ `expr substr $(uname -s) 1 5` = "Linux" ]; then
    if [ -z "$TMUX" ]; then
        function refresh { }
        if [[ -n "$SSH_AUTH_SOCK" && \
            "`readlink ~/.ssh/ssh_auth_sock`" != "$SSH_AUTH_SOCK" ]]; then
            ln -sf $SSH_AUTH_SOCK ~/.ssh/ssh_auth_sock
        fi
        tmux attach || tmux new -A
    else
        function refresh {
            export $(tmux show-environment | grep "^SSH_AUTH_SOCK")
        }
    fi

    function preexec {
        refresh
    }

    export ARCADIA_ROOT="$HOME/projects/arcadia"
    if [ -e "$ARCADIA_ROOT/devtools/ya/ya" ]; then
        alias ya="$ARCADIA_ROOT/devtools/ya/ya"
        alias gdb='ya tool gdb'
        alias svn='ya tool svn'
        alias mapreduce="$ARCADIA_ROOT/quality/mapreduce/mapreduce"
        ## For Ya
        export PATH="$ARCADIA_ROOT/devtools/ya:$PATH"
        ## Use actual tools from 'ya tool'
        export CC=$(ya tool cc --print-path)
        ## After installation type
        alias gcc=$CC
        export CXX=$(ya tool c++ --print-path)
        ## After installation type
        alias g++=$CXX
        export OMP_NUM_THREADS=8
        export MKL_NUM_THREADS=8
        ## Binaries build with latest GCC require latest libstdc++:
        yaldpath="$(ya tool c++ --print-toolchain-path)/gcc/lib"
        export LD_LIBRARY_PATH="${yaldpath}:${LD_LIBRARY_PATH}"

        alias yaycm='ya make -r --add-result='.h' --add-result='.hh' \
            --add-result='.hpp' --add-result='.c' --add-result='.cc' \
            --add-result='.cpp' --output ${ARCADIA_ROOT}/.ycm \
            --no-src-links --keep-going'
    fi

    if [ -e "${HOME}/.yt/token" ]; then
        export YT_PROXY=freud.yt.yandex.net
        export YT_TOKEN=`cat ~/.yt/token`
        export YT_HOME=//home/vision-duplicates/splinter
    fi

    nbstart () {
        workon $1 && \
            ipython notebook \
            --certfile=~/projects/dots/all/security/mycert.pem \
            --no-browser --port=7000
    }
else

fi
